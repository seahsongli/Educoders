{"ast":null,"code":"import { AbiDecodingZeroDataError } from '../../errors/abi.js';\nimport { BaseError } from '../../errors/base.js';\nimport { ContractFunctionExecutionError, ContractFunctionRevertedError, ContractFunctionZeroDataError, RawContractError } from '../../errors/contract.js';\nimport { InternalRpcError } from '../../errors/rpc.js';\nconst EXECUTION_REVERTED_ERROR_CODE = 3;\nexport function getContractError(err, {\n  abi,\n  address,\n  args,\n  docsPath,\n  functionName,\n  sender\n}) {\n  const {\n    code,\n    data,\n    message,\n    shortMessage\n  } = err instanceof RawContractError ? err : err instanceof BaseError ? err.walk(err => 'data' in err) || err.walk() : {};\n  const cause = (() => {\n    if (err instanceof AbiDecodingZeroDataError) return new ContractFunctionZeroDataError({\n      functionName\n    });\n    if ([EXECUTION_REVERTED_ERROR_CODE, InternalRpcError.code].includes(code) && (data || message || shortMessage)) {\n      return new ContractFunctionRevertedError({\n        abi,\n        data: typeof data === 'object' ? data.data : data,\n        functionName,\n        message: shortMessage ?? message\n      });\n    }\n    return err;\n  })();\n  return new ContractFunctionExecutionError(cause, {\n    abi,\n    args,\n    contractAddress: address,\n    docsPath,\n    functionName,\n    sender\n  });\n}","map":{"version":3,"names":["AbiDecodingZeroDataError","BaseError","ContractFunctionExecutionError","ContractFunctionRevertedError","ContractFunctionZeroDataError","RawContractError","InternalRpcError","EXECUTION_REVERTED_ERROR_CODE","getContractError","err","abi","address","args","docsPath","functionName","sender","code","data","message","shortMessage","walk","cause","includes","contractAddress"],"sources":["C:\\Users\\seahs\\repos\\worldcoin-app\\node_modules\\@worldcoin\\idkit-core\\node_modules\\viem\\utils\\errors\\getContractError.ts"],"sourcesContent":["import type { Abi, Address } from 'abitype'\n\nimport { AbiDecodingZeroDataError } from '../../errors/abi.js'\nimport { BaseError } from '../../errors/base.js'\nimport {\n  ContractFunctionExecutionError,\n  type ContractFunctionExecutionErrorType,\n  ContractFunctionRevertedError,\n  type ContractFunctionRevertedErrorType,\n  ContractFunctionZeroDataError,\n  type ContractFunctionZeroDataErrorType,\n  RawContractError,\n} from '../../errors/contract.js'\nimport { InternalRpcError } from '../../errors/rpc.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\nconst EXECUTION_REVERTED_ERROR_CODE = 3\n\nexport type GetContractErrorReturnType<cause = ErrorType> = Omit<\n  ContractFunctionExecutionErrorType,\n  'cause'\n> & {\n  cause:\n    | cause\n    | ContractFunctionZeroDataErrorType\n    | ContractFunctionRevertedErrorType\n}\n\nexport function getContractError<err extends ErrorType<string>>(\n  err: err,\n  {\n    abi,\n    address,\n    args,\n    docsPath,\n    functionName,\n    sender,\n  }: {\n    abi: Abi\n    args: any\n    address?: Address | undefined\n    docsPath?: string | undefined\n    functionName: string\n    sender?: Address | undefined\n  },\n): GetContractErrorReturnType {\n  const { code, data, message, shortMessage } = (\n    err instanceof RawContractError\n      ? err\n      : err instanceof BaseError\n        ? err.walk((err) => 'data' in (err as Error)) || err.walk()\n        : {}\n  ) as RawContractError\n\n  const cause = (() => {\n    if (err instanceof AbiDecodingZeroDataError)\n      return new ContractFunctionZeroDataError({ functionName })\n    if (\n      [EXECUTION_REVERTED_ERROR_CODE, InternalRpcError.code].includes(code) &&\n      (data || message || shortMessage)\n    ) {\n      return new ContractFunctionRevertedError({\n        abi,\n        data: typeof data === 'object' ? data.data : data,\n        functionName,\n        message: shortMessage ?? message,\n      })\n    }\n    return err\n  })()\n\n  return new ContractFunctionExecutionError(cause as BaseError, {\n    abi,\n    args,\n    contractAddress: address,\n    docsPath,\n    functionName,\n    sender,\n  }) as GetContractErrorReturnType\n}\n"],"mappings":"AAEA,SAASA,wBAAwB,QAAQ,qBAAqB;AAC9D,SAASC,SAAS,QAAQ,sBAAsB;AAChD,SACEC,8BAA8B,EAE9BC,6BAA6B,EAE7BC,6BAA6B,EAE7BC,gBAAgB,QACX,0BAA0B;AACjC,SAASC,gBAAgB,QAAQ,qBAAqB;AAGtD,MAAMC,6BAA6B,GAAG,CAAC;AAYvC,OAAM,SAAUC,gBAAgBA,CAC9BC,GAAQ,EACR;EACEC,GAAG;EACHC,OAAO;EACPC,IAAI;EACJC,QAAQ;EACRC,YAAY;EACZC;AAAM,CAQP;EAED,MAAM;IAAEC,IAAI;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAY,CAAE,GACzCV,GAAG,YAAYJ,gBAAgB,GAC3BI,GAAG,GACHA,GAAG,YAAYR,SAAS,GACtBQ,GAAG,CAACW,IAAI,CAAEX,GAAG,IAAK,MAAM,IAAKA,GAAa,CAAC,IAAIA,GAAG,CAACW,IAAI,EAAE,GACzD,EACa;EAErB,MAAMC,KAAK,GAAG,CAAC,MAAK;IAClB,IAAIZ,GAAG,YAAYT,wBAAwB,EACzC,OAAO,IAAII,6BAA6B,CAAC;MAAEU;IAAY,CAAE,CAAC;IAC5D,IACE,CAACP,6BAA6B,EAAED,gBAAgB,CAACU,IAAI,CAAC,CAACM,QAAQ,CAACN,IAAI,CAAC,KACpEC,IAAI,IAAIC,OAAO,IAAIC,YAAY,CAAC,EACjC;MACA,OAAO,IAAIhB,6BAA6B,CAAC;QACvCO,GAAG;QACHO,IAAI,EAAE,OAAOA,IAAI,KAAK,QAAQ,GAAGA,IAAI,CAACA,IAAI,GAAGA,IAAI;QACjDH,YAAY;QACZI,OAAO,EAAEC,YAAY,IAAID;OAC1B,CAAC;IACJ;IACA,OAAOT,GAAG;EACZ,CAAC,EAAC,CAAE;EAEJ,OAAO,IAAIP,8BAA8B,CAACmB,KAAkB,EAAE;IAC5DX,GAAG;IACHE,IAAI;IACJW,eAAe,EAAEZ,OAAO;IACxBE,QAAQ;IACRC,YAAY;IACZC;GACD,CAA+B;AAClC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}