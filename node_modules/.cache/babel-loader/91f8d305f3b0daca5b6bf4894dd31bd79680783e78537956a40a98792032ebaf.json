{"ast":null,"code":"'use client';\n\n// For Next.js app router\nvar _jsxFileName = \"C:\\\\Users\\\\seahs\\\\repos\\\\worldcoin-app\\\\src\\\\verify.jsx\";\nimport { IDKitWidget, VerificationLevel } from '@worldcoin/idkit';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorldcoinVerification = () => {\n  const onSuccess = () => {\n    window.location.href = \"/success\"; // Redirect on success\n  };\n  const handleVerify = async proof => {\n    const res = await fetch(\"/api/verify\", {\n      // Route to your backend\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(proof)\n    });\n    if (!res.ok) {\n      throw new Error(\"Verification failed.\"); // IDKit will handle this error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(IDKitWidget, {\n    app_id: \"app_staging_d2fdb1622a1a3f396abdecf1eef2efad\" // obtained from Developer Portal\n    ,\n    action: \"vote-for-moolah\" // obtained from Developer Portal\n    ,\n    onSuccess: onSuccess,\n    handleVerify: handleVerify,\n    verification_level: VerificationLevel.Orb,\n    children: ({\n      open\n    }) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: open,\n      children: \"Verify with World ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_c = WorldcoinVerification;\nexport default WorldcoinVerification;\nvar _c;\n$RefreshReg$(_c, \"WorldcoinVerification\");","map":{"version":3,"names":["_jsxFileName","IDKitWidget","VerificationLevel","React","jsxDEV","_jsxDEV","WorldcoinVerification","onSuccess","window","location","href","handleVerify","proof","res","fetch","method","headers","body","JSON","stringify","ok","Error","app_id","action","verification_level","Orb","children","open","onClick","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/seahs/repos/worldcoin-app/src/verify.jsx"],"sourcesContent":["'use client'; // For Next.js app router\r\nimport { IDKitWidget, VerificationLevel } from '@worldcoin/idkit';\r\nimport React from 'react';\r\n\r\nconst WorldcoinVerification = () => {\r\n    const onSuccess = () => {\r\n        window.location.href = \"/success\"; // Redirect on success\r\n    };\r\n\r\n    const handleVerify = async (proof) => {\r\n        const res = await fetch(\"/api/verify\", { // Route to your backend\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(proof),\r\n        });\r\n\r\n        if (!res.ok) {\r\n            throw new Error(\"Verification failed.\"); // IDKit will handle this error\r\n        }\r\n    };\r\n\r\n    return (\r\n        <IDKitWidget\r\n            app_id=\"app_staging_d2fdb1622a1a3f396abdecf1eef2efad\" // obtained from Developer Portal\r\n            action=\"vote-for-moolah\" // obtained from Developer Portal\r\n            onSuccess={onSuccess}\r\n            handleVerify={handleVerify}\r\n            verification_level={VerificationLevel.Orb}\r\n        >\r\n            {({ open }) => \r\n                <button onClick={open}>Verify with World ID</button>\r\n            }\r\n        </IDKitWidget>\r\n    );\r\n};\r\n\r\nexport default WorldcoinVerification;\r\n"],"mappings":"AAAA,YAAY;;AAAE;AAAA,IAAAA,YAAA;AACd,SAASC,WAAW,EAAEC,iBAAiB,QAAQ,kBAAkB;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAChC,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACpBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,UAAU,CAAC,CAAC;EACvC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;MAAE;MACrCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,KAAK;IAC9B,CAAC,CAAC;IAEF,IAAI,CAACC,GAAG,CAACO,EAAE,EAAE;MACT,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC,CAAC,CAAC;IAC7C;EACJ,CAAC;EAED,oBACIhB,OAAA,CAACJ,WAAW;IACRqB,MAAM,EAAC,8CAA8C,CAAC;IAAA;IACtDC,MAAM,EAAC,iBAAiB,CAAC;IAAA;IACzBhB,SAAS,EAAEA,SAAU;IACrBI,YAAY,EAAEA,YAAa;IAC3Ba,kBAAkB,EAAEtB,iBAAiB,CAACuB,GAAI;IAAAC,QAAA,EAEzCA,CAAC;MAAEC;IAAK,CAAC,kBACNtB,OAAA;MAAQuB,OAAO,EAAED,IAAK;MAAAD,QAAA,EAAC;IAAoB;MAAAG,QAAA,EAAA7B,YAAA;MAAA8B,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAF,QAAA,EAAA7B,YAAA;IAAA8B,UAAA;IAAAC,YAAA;EAAA,OAE/C,CAAC;AAEtB,CAAC;AAACC,EAAA,GAhCI1B,qBAAqB;AAkC3B,eAAeA,qBAAqB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}