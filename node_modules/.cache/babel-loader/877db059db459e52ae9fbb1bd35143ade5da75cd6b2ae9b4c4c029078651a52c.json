{"ast":null,"code":"import { createTransport } from './createTransport.js';\n/**\n * @description Creates a custom transport given an EIP-1193 compliant `request` attribute.\n */\nexport function custom(provider, config = {}) {\n  const {\n    key = 'custom',\n    name = 'Custom Provider',\n    retryDelay\n  } = config;\n  return ({\n    retryCount: defaultRetryCount\n  }) => createTransport({\n    key,\n    name,\n    request: provider.request.bind(provider),\n    retryCount: config.retryCount ?? defaultRetryCount,\n    retryDelay,\n    type: 'custom'\n  });\n}","map":{"version":3,"names":["createTransport","custom","provider","config","key","name","retryDelay","retryCount","defaultRetryCount","request","bind","type"],"sources":["C:\\Users\\seahs\\repos\\worldcoin-app\\node_modules\\@worldcoin\\idkit-core\\node_modules\\viem\\clients\\transports\\custom.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport {\n  type CreateTransportErrorType,\n  type Transport,\n  type TransportConfig,\n  createTransport,\n} from './createTransport.js'\n\ntype EthereumProvider = { request(...args: any): Promise<any> }\n\nexport type CustomTransportConfig = {\n  /** The key of the transport. */\n  key?: TransportConfig['key'] | undefined\n  /** The name of the transport. */\n  name?: TransportConfig['name'] | undefined\n  /** The max number of times to retry. */\n  retryCount?: TransportConfig['retryCount'] | undefined\n  /** The base delay (in ms) between retries. */\n  retryDelay?: TransportConfig['retryDelay'] | undefined\n}\n\nexport type CustomTransport = Transport<\n  'custom',\n  {},\n  EthereumProvider['request']\n>\n\nexport type CustomTransportErrorType = CreateTransportErrorType | ErrorType\n\n/**\n * @description Creates a custom transport given an EIP-1193 compliant `request` attribute.\n */\nexport function custom<provider extends EthereumProvider>(\n  provider: provider,\n  config: CustomTransportConfig = {},\n): CustomTransport {\n  const { key = 'custom', name = 'Custom Provider', retryDelay } = config\n  return ({ retryCount: defaultRetryCount }) =>\n    createTransport({\n      key,\n      name,\n      request: provider.request.bind(provider),\n      retryCount: config.retryCount ?? defaultRetryCount,\n      retryDelay,\n      type: 'custom',\n    })\n}\n"],"mappings":"AACA,SAIEA,eAAe,QACV,sBAAsB;AAuB7B;;;AAGA,OAAM,SAAUC,MAAMA,CACpBC,QAAkB,EAClBC,MAAA,GAAgC,EAAE;EAElC,MAAM;IAAEC,GAAG,GAAG,QAAQ;IAAEC,IAAI,GAAG,iBAAiB;IAAEC;EAAU,CAAE,GAAGH,MAAM;EACvE,OAAO,CAAC;IAAEI,UAAU,EAAEC;EAAiB,CAAE,KACvCR,eAAe,CAAC;IACdI,GAAG;IACHC,IAAI;IACJI,OAAO,EAAEP,QAAQ,CAACO,OAAO,CAACC,IAAI,CAACR,QAAQ,CAAC;IACxCK,UAAU,EAAEJ,MAAM,CAACI,UAAU,IAAIC,iBAAiB;IAClDF,UAAU;IACVK,IAAI,EAAE;GACP,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}